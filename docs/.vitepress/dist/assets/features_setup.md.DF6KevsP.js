import{_ as t,c as a,o as i,ae as n}from"./chunks/framework.Cthp9TdA.js";const h=JSON.parse('{"title":"Next.js Project Setup","description":"","frontmatter":{},"headers":[],"relativePath":"features/setup.md","filePath":"features/setup.md"}'),s={name:"features/setup.md"};function r(o,e,l,c,p,u){return i(),a("div",null,e[0]||(e[0]=[n(`<h1 id="next-js-project-setup" tabindex="-1">Next.js Project Setup <a class="header-anchor" href="#next-js-project-setup" aria-label="Permalink to &quot;Next.js Project Setup&quot;">​</a></h1><h2 id="initial-setup" tabindex="-1">Initial Setup <a class="header-anchor" href="#initial-setup" aria-label="Permalink to &quot;Initial Setup&quot;">​</a></h2><p>The project uses Next.js 14 with TypeScript and the App Router. Key decisions and configurations:</p><h3 id="configuration-choices" tabindex="-1">Configuration Choices <a class="header-anchor" href="#configuration-choices" aria-label="Permalink to &quot;Configuration Choices&quot;">​</a></h3><ul><li>Using JavaScript for Next.js configuration (<code>next.config.js</code>) to avoid TypeScript complexity during setup</li><li>App Router only (no Pages Router) for simpler routing structure</li><li>Minimal initial TypeScript configuration to get started</li></ul><h3 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/src</span></span>
<span class="line"><span>  /app</span></span>
<span class="line"><span>    layout.tsx    # Root layout with metadata</span></span>
<span class="line"><span>    page.tsx      # Home page</span></span>
<span class="line"><span>    not-found.tsx # 404 page</span></span></code></pre></div><h3 id="key-dependencies" tabindex="-1">Key Dependencies <a class="header-anchor" href="#key-dependencies" aria-label="Permalink to &quot;Key Dependencies&quot;">​</a></h3><ul><li>Next.js 14.2.28</li><li>React 18</li><li>TypeScript 5</li><li>TailwindCSS (configuration in progress)</li><li>DaisyUI (configuration in progress)</li></ul><h2 id="troubleshooting-learnings" tabindex="-1">Troubleshooting Learnings <a class="header-anchor" href="#troubleshooting-learnings" aria-label="Permalink to &quot;Troubleshooting Learnings&quot;">​</a></h2><p>Several issues were encountered and resolved during setup:</p><ol><li><p><strong>404 Routing Issues</strong></p><ul><li>Ensure App Router files are in correct locations</li><li>Clear <code>.next</code> cache when changing routing structure</li><li>Use proper file naming (<code>page.tsx</code> vs <code>index.tsx</code>)</li></ul></li><li><p><strong>Process Management</strong></p><ul><li>Kill all Node processes before fresh starts</li><li>Check for port conflicts (3000-3003)</li><li>Use <code>lsof -i :3000</code> to check for lingering processes</li></ul></li><li><p><strong>TypeScript Configuration</strong></p><ul><li>Start with JavaScript config files</li><li>Add TypeScript gradually</li><li>Use <code>as</code> type assertions for simpler setup</li></ul></li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Complete TailwindCSS and DaisyUI configuration</li><li>Set up linting and code formatting</li><li>Configure testing framework</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><ul><li><a href="https://nextjs.org/docs" target="_blank" rel="noreferrer">Next.js Documentation</a></li><li><a href="https://nextjs.org/docs/app" target="_blank" rel="noreferrer">App Router Migration Guide</a></li></ul>`,16)]))}const g=t(s,[["render",r]]);export{h as __pageData,g as default};
