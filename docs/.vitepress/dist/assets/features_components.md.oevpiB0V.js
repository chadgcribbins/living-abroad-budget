import{_ as o,c as t,o as n,ae as a}from"./chunks/framework.Cthp9TdA.js";const u=JSON.parse('{"title":"UI Component Library","description":"","frontmatter":{},"headers":[],"relativePath":"features/components.md","filePath":"features/components.md"}'),i={name:"features/components.md"};function s(r,e,l,p,c,m){return n(),t("div",null,e[0]||(e[0]=[a('<h1 id="ui-component-library" tabindex="-1">UI Component Library <a class="header-anchor" href="#ui-component-library" aria-label="Permalink to &quot;UI Component Library&quot;">​</a></h1><p>The Living Abroad Budget application uses a comprehensive UI component library built with React, TypeScript, TailwindCSS, and DaisyUI. The components are designed to be reusable, flexible, and consistent across the application.</p><h2 id="component-structure" tabindex="-1">Component Structure <a class="header-anchor" href="#component-structure" aria-label="Permalink to &quot;Component Structure&quot;">​</a></h2><p>The component library is organized into the following sections:</p><ul><li><strong>UI Components</strong>: Basic UI elements (buttons, inputs, cards)</li><li><strong>Layout Components</strong>: Page structure components (grids, containers)</li><li><strong>Navigation Components</strong>: Sidebar, breadcrumbs, and routing components</li><li><strong>Form Components</strong>: Form-specific components</li><li><strong>Chart Components</strong>: Financial visualization components</li></ul><h2 id="live-examples" tabindex="-1">Live Examples <a class="header-anchor" href="#live-examples" aria-label="Permalink to &quot;Live Examples&quot;">​</a></h2><p>You can view interactive examples of these components in the application:</p><ul><li><a href="/components/">Basic UI Components</a></li><li><a href="/components/interactive">Interactive Components</a></li><li><a href="/components/charts">Chart Components</a></li></ul><h2 id="component-categories" tabindex="-1">Component Categories <a class="header-anchor" href="#component-categories" aria-label="Permalink to &quot;Component Categories&quot;">​</a></h2><ul><li><a href="./components/ui">UI Components</a></li><li><a href="./components/layout">Layout Components</a></li><li><a href="./components/navigation">Navigation Components</a></li><li><a href="./components/form">Form Components</a></li><li><a href="./components/charts">Chart Components</a></li></ul><h2 id="theme-support" tabindex="-1">Theme Support <a class="header-anchor" href="#theme-support" aria-label="Permalink to &quot;Theme Support&quot;">​</a></h2><p>The component library uses DaisyUI&#39;s theming system. The default themes are:</p><ul><li><code>light</code>: Light theme</li><li><code>dark</code>: Dark theme</li></ul><p>Use the <code>ThemeToggle</code> component to allow users to switch between themes.</p><h2 id="responsive-design" tabindex="-1">Responsive Design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;Responsive Design&quot;">​</a></h2><p>All components are designed to be responsive. The grid system and many components have built-in responsive behavior.</p><h2 id="accessibility" tabindex="-1">Accessibility <a class="header-anchor" href="#accessibility" aria-label="Permalink to &quot;Accessibility&quot;">​</a></h2><p>Components are built with accessibility in mind, including proper labeling, ARIA attributes, and keyboard navigation.</p>',18)]))}const d=o(i,[["render",s]]);export{u as __pageData,d as default};
