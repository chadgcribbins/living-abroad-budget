Living Abroad Budgeting Tool – Product Requirements Document (PRD)

Product Vision

Moving abroad can be exciting yet financially daunting. Families and individuals relocating to a new country face many unknowns: differences in cost of living, housing markets, school fees, taxes, and even currency fluctuations that can suddenly change their purchasing power ￼ ￼. The Living Abroad Budgeting Tool is a web application that empowers users to plan their finances confidently when moving from one country to another (initially focusing on moves from the UK to Portugal under the NHR tax regime).

Vision Statement: Enable relocating families and expats to model their full financial picture in a new country – housing, schooling, transportation, taxes, and income – all in one interactive tool. By inputting their personal data and exploring various scenarios (renting vs. buying, public vs. private school, dual incomes, etc.), users can obtain realistic monthly and annual budgets. The tool provides clear insights into how much income they will need, how their expenses break down, and how uncertainties (like exchange rates or a gap in income) could impact their plan. Ultimately, our vision is to remove the stress from international financial planning and help users make informed decisions for a secure life abroad.

Note: The initial release will deeply solve the planning needs for a family of five relocating from the UK to Portugal (taking into account Portugal’s Non-Habitual Resident tax program), but the product is architected to be extensible to other origin/destination country pairs in the future.

Goals and Objectives
	•	Comprehensive Budget Scenarios: Enable users to calculate realistic cost-of-living scenarios in their destination country, combining all major expense categories (housing, transport, utilities, education, etc.).
	•	Scenario Comparison: Allow easy comparison of different lifestyle choices – e.g. budget impact of renting vs. buying a home, or public vs. private schooling – via toggles or sliders for key assumptions.
	•	Incorporate All Income Types: Factor in both recurring income (salaries from two partners, pensions) and non-recurring inflows (bonuses, investment income, asset sales) to show a complete income picture.
	•	Dual Partner Planning: Support inputs from two earners and model dual incomes and expenses, reflecting the reality of many families where both partners contribute financially.
	•	Tax and Net Income Insights: Account for tax implications (e.g. Portugal’s NHR flat 20% tax regime and foreign income exemptions ￼) to translate gross income into net take-home, and give feedback on required gross income to achieve a target net budget in the new country.
	•	Age-Based Expense Segmentation: Accommodate family members of different ages – e.g. young children vs. teenagers vs. retirees – and adjust relevant cost categories (childcare, schooling, healthcare, retirement savings) accordingly.
	•	Emergency Planning: Support planning for financial uncertainties by including features for emergency funds or stress tests (e.g. simulate a temporary loss of income or currency exchange volatility).
	•	User Confidence: Provide a clear and intuitive interface (with visual summary dashboard) so that users can easily understand their financial outlook and feel confident in their relocation decision.
	•	Extensibility: Design the tool’s architecture to be modular and country-agnostic, so that it can be scaled to other destination countries and potentially evolve into a multi-user SaaS platform in the future.

User Personas

Our primary users are people planning an international move who need to map out their finances. Key personas include:
	•	Relocating Family (Primary Persona): A dual-income couple with children moving from the UK to Portugal. For example, John and Mary have three kids (ages 4, 9, and 14) and are relocating under Portugal’s NHR program (which offers tax benefits to foreign residents). They need to compare the cost of renting vs. buying in Lisbon, evaluate public school vs. international school for their older children, factor in childcare for their youngest, and ensure their combined salaries (one UK remote job paid in GBP, one local job in EUR) will cover all expenses. They also want to know how much savings to set aside as an emergency buffer in case of delayed income or exchange rate swings.
	•	Remote Working Couple / Digital Nomads: A young couple without children moving abroad for a better lifestyle. For instance, Alice and Ben are digital nomads moving from the US to Portugal. They earn income from freelance projects (some paid in USD, some in EUR) and have passive income from investments. They are interested in the lower cost of living and tax advantages. They use the tool to estimate monthly expenses (renting a flat, co-working space, utilities, eating out) and to see how currency fluctuations or changes in freelance income would affect their budget. They also want to compare their new cost of living with what it was in their home country to validate the move financially.
	•	Retired Expatriates: An older couple planning to retire abroad. For example, David (65) and Susan (63) are retiring from the UK to Portugal. They will live on a fixed pension income and savings. They have no schooling costs, but healthcare and insurance are a priority. They use the tool to project their monthly expenses (possibly buying a property, private health insurance, higher medical costs assumptions) and ensure their pension plus passive income will suffice. They also want to model worst-case scenarios, such as needing long-term care or significant medical expenses, and plan a cash reserve accordingly.

These personas guide the product design, ensuring the tool addresses a range of scenarios – from families with children to individuals or couples without kids, to retirees – while maintaining focus on the core needs of a family relocation scenario in the initial version.

Use Cases

Based on the personas above, the Living Abroad Budgeting Tool will support several key use cases:
	•	Budget Planning for a Relocation: Input all expected expenses and incomes to calculate a detailed monthly and annual budget for living in the new country. Example: A family can enter their Portugal living costs to see if their combined income covers everything.
	•	Housing Decision (Rent vs. Buy): Compare the financial implications of renting a home versus buying one. Users can toggle between rent and mortgage scenarios to see differences in monthly cost, upfront investment, and long-term impact.
	•	Education Choice (Public vs. Private School): Model the cost of sending children to public (minimal direct cost) versus private or international schools (tuition fees). The tool shows how adding tuition fees affects the overall budget, both monthly and yearly.
	•	Dual-Income and Multi-Source Income Tracking: Account for two salaries (for two partners) and additional income streams (rental income, dividends, etc.). The use case is to see a consolidated view of income and how irregular inflows (e.g. annual bonus or one-time asset sale) contribute to covering expenses.
	•	Currency Exchange Impact Analysis: For users earning in one currency and spending in another, simulate how exchange rate changes affect the budget. Example: A user can adjust a GBP/EUR exchange rate assumption to see how a stronger local currency making groceries and rent more expensive would impact their monthly surplus or deficit ￼.
	•	Tax Planning and Net Income Calculation: Given a target net income or known gross incomes, determine what gross income (pre-tax) is required to sustain the desired lifestyle under the destination country’s tax regime. Example: A user can see that under the NHR 20% flat tax, they need a lower gross salary to net the same amount, compared to standard tax rates.
	•	Scenario Stress-Testing: Allow users to model “what-if” scenarios for emergencies or changes. For instance, turn off one partner’s salary for a few months to simulate a job loss or sabbatical, or add an unexpected expense, to see if they have enough buffer. Another scenario: apply a ±10% change to major expense categories or currency rate to see how much cushion their budget has.
	•	Comparison to Home Country: Optionally, let users compare their new cost-of-living scenario to a baseline in their home country. This could be done by either inputting a parallel scenario for their home location or using average indices. Example: John and Mary compare their projected monthly expense in Portugal versus what a similar lifestyle costs them in the UK, to quantify savings or extra costs.

These use cases ensure the tool addresses not just static budgeting, but interactive decision-making and contingency planning which are crucial for expats facing a new environment.

MVP Scope: Core Features and Functionality

The initial Minimum Viable Product (MVP) will deliver a focused set of features that cover the essential needs of a family relocating to Portugal. The MVP concentrates on core budgeting inputs and outputs, providing a robust solution for personal financial planning in the new country. The following are the core features in scope for the MVP:

1. User Profile & Family Details
	•	Destination Country Selection: The user selects the country of relocation (starting with Portugal as the default). This setting will drive certain default assumptions (e.g. currency, tax rules). In future, more destination (and origin) countries will be supported with appropriate data.
	•	Origin Country (for Comparison) (optional for MVP): The user can optionally select an origin or current country (e.g. UK) if they wish to compare costs or retain an original currency for some inputs. (This is mainly for future comparative features, with minimal use in MVP except as a reference.)
	•	Family Composition: Input number of adults and children, including ages of each child. This allows the tool to adjust or recommend relevant cost fields (e.g. if a child is under school age, the user might be prompted to include childcare costs instead of school tuition).
	•	Residency Status / Tax Regime: Specify any special tax status in the destination (e.g. selecting NHR for Portugal if applicable). This will inform the tax calculations for net income. For MVP, the logic will be simplified (e.g. apply a flat 20% tax rate for NHR income vs standard progressive rates) to estimate take-home pay differences.
	•	Planned Duration of Stay: Number of years the family expects to live abroad (e.g. 2 years, 5 years, 10 years). This can help contextualize one-off costs (amortizing them yearly) and future planning (though MVP will primarily use it for informational purposes).

2. Income Sources Module

Capture all forms of income to provide a complete picture of the money coming in:
	•	Primary Income(s) – Salaries: Separate inputs for Partner 1 and Partner 2’s income. Users can input annual gross salary or monthly net salary, and the tool will either calculate monthly from annual or vice versa. If the user inputs gross, the tool applies destination tax rules (and selected regime) to estimate net monthly take-home. For MVP, tax calculations will use simplified assumptions (e.g. flat NHR rate or a basic tax bracket model for Portugal).
	•	Passive Income Streams: Users can list other recurring incomes such as rental property income, investment dividends, freelance or side-gig earnings, pensions, etc. For each stream, the user specifies the type, amount, and frequency (monthly, quarterly, annually). The tool will include these in the budget on a pro-rated basis (e.g. a quarterly amount will be divided into a monthly equivalent in calculations).
	•	One-Off Inflows: Users can input any one-time or irregular inflows of money that might boost their finances. This includes things like expected bonuses, the sale of an asset, relocation allowance from an employer, or moving-out refunds. Each one-off can have a date or year associated if needed, but in MVP a simple annual total or note can be included. These inflows can be either incorporated into the annual budget (spread out or treated as lump sum) or kept separate for reference.
	•	Currency Settings for Income: If applicable, allow each income item to be tagged with a currency if not in the primary currency. For MVP, a single base currency (e.g. EUR for Portugal) will be assumed for simplicity, but the user can manually convert foreign incomes. In a future update, we will let users input, say, a salary in GBP which the tool converts to EUR using an exchange rate input.

3. Housing Calculator Module

Housing is often the largest expense. The tool provides an interactive housing calculator with scenario toggling:
	•	Renting vs. Buying Toggle: The user can switch between a rental scenario and a home purchase scenario to compare costs.
	•	If Renting: Input the monthly rent amount in local currency (EUR). Optionally, include a separate line for expected utilities or condo fees if the rent doesn’t include them (though general utilities are covered in a different section).
	•	If Buying: Input home purchase details to estimate the monthly mortgage cost and other ownership expenses:
	•	Property price or price range (in EUR).
	•	Down payment amount (either as a percentage of price or a fixed amount).
	•	Mortgage term (years) and interest rate (%). The tool will calculate an approximate monthly mortgage payment.
	•	Annual property taxes (e.g. IMI in Portugal), homeowner’s insurance, and an estimated monthly maintenance reserve. These costs will be added to the home ownership scenario.
	•	Output of Housing Module: The module will display the total monthly housing cost for renting (just rent) vs buying (mortgage + taxes/fees), so users can see the difference. (Future versions might allow side-by-side comparison, but MVP can allow quick switching via the toggle.)

4. Transportation Module

Accounts for the costs of transportation in the new country:
	•	Car Ownership Option: A toggle or yes/no to indicate if the family will have a private car. If Yes:
	•	Choose whether the car is owned (purchased) or leased.
	•	Purchase scenario: Input an estimated purchase price or monthly financing payment for the car, plus yearly registration/road tax if applicable.
	•	Lease scenario: Input the monthly lease payment.
	•	Regardless of purchase or lease, input approximate monthly fuel or charging costs, insurance, and maintenance costs. (These can be estimates based on local fuel prices and driving habits.)
	•	If No Car: (or even if yes, in addition) allow input for Public Transport costs. This can include monthly transit passes, ride-sharing/taxi budget, or occasional car rentals. The user can input a monthly amount or separate line items (e.g. metro pass €40, ride-share €30).
	•	The module will tally total transport costs per month given the user’s selections. Users might use this to compare, for example, having a car vs. going car-free. (In MVP, this comparison would be manual via adjusting inputs, whereas a future enhancement might formalize it as a toggle scenario like the housing module.)

5. Utilities & Essentials Module

Capture the recurring necessities and day-to-day living expenses:
	•	Utilities: Monthly estimates for electricity, water, heating gas/oil, and garbage if applicable. (The tool may provide some default suggestions or average for the chosen country/city, but the user can override with their own expected costs.)
	•	Internet & Mobile: Monthly cost for home internet service and phone plans.
	•	Groceries & Household Goods: A monthly budget for food and household supplies. (The tool might prompt an estimate based on family size, but user-entered value is used in calculations.)
	•	Insurance: Any other essential insurance costs not covered elsewhere – e.g. health insurance premiums (if required for expats in that country), or renter’s/home contents insurance. For MVP, health insurance can be input as a custom line here if applicable. A dedicated healthcare module is planned post-MVP.
	•	Personal & Miscellaneous: Additional line items for lifestyle choices – e.g. entertainment, dining out, subscriptions (gym, streaming services), childcare (if not covered under education for pre-school kids), etc. The user can add several custom expense lines in this category to ensure all aspects of their cost of living are included.
	•	This module should be flexible: the user can add or remove line items to tailor it to their situation. The output is a sum of all these essential expenses per month.

6. Education & Childcare Module

For families with children, education is a critical factor, and costs can vary greatly:
	•	School Type Toggle: If the user has school-age children, they can select Public School vs Private/International School for each child (or overall).
	•	If Public is selected, assume minimal direct schooling cost (public schools in many countries are free or low cost, aside from maybe uniforms or supplies which could be rolled into misc expenses). The tool will show the schooling cost as near zero (or a small user-provided amount if any).
	•	If Private is selected, allow input of annual tuition per child or overall. Because tuition is often paid monthly or term-wise, the tool can either accept a monthly amount or an annual amount and divide it by 12 for monthly budgeting.
	•	Childcare for Young Children: If any child’s age is below school age (e.g. under 5), provide an input for childcare or nursery costs. This could be a monthly daycare fee or the cost of a nanny. This ensures the tool covers pre-school expenses as well.
	•	Higher Education or University (if applicable): (Not likely in MVP scope unless the family has university-age dependents, which is less common for “family of five” scenario.) This could be out of scope for now, but the user can always add a custom expense in Essentials if needed.
	•	Education Expense Output: The tool will calculate total education-related expenses per month and annually. For example, if private school is chosen and tuition is €12,000/year, it would show €1,000/month. If public, it might show €0 (or a minimal amount). If a toddler is in daycare at €500/month, that is added. The “with and without schooling” comparison (from the Goals) can be achieved by toggling the school type or including/excluding those costs to see how the rest of the budget looks without that burden. The UI might allow quickly turning off education costs to see the difference.

7. Summary Dashboard & Results

After inputting all the above, the user can view a Summary Dashboard which is the core output of the MVP. This dashboard will present key calculations and indicators to inform the user’s financial planning:
	•	Total Monthly Expenses: A sum of all monthly costs the user entered, typically displayed as one figure and possibly broken down by category (housing, transport, utilities, education, etc.). For context, the dashboard might show two versions if relevant: e.g. “with private school” vs “without private school” if that toggle is active, so users see the impact of that decision.
	•	Total Annual Expenses: The above monthly figure multiplied out to an annual view (plus any known one-off annual costs). This helps users understand the yearly budget needed.
	•	Total Monthly & Annual Income: Summation of all income sources on a monthly and annual basis (after tax, if the tool is doing net calculations). If the user provided gross salaries, the tool will compute an estimated net monthly income using the tax regime info. This is then added to passive incomes (assuming those might have different tax treatments or user can input net values for simplicity in MVP).
	•	Disposable Income / Surplus or Deficit: The tool computes Disposable Income by subtracting expenses from income. This is shown monthly and yearly. If positive, it indicates surplus (which could go to savings or investments); if negative, it indicates a shortfall (and the dashboard could flag that the plan is not financially sustainable). This helps the user quickly see if their plan “works” or if they need to adjust inputs (like reducing costs or increasing income).
	•	Required Gross Income (Target Calculation): For users who want to understand how much they need to earn under the new conditions, the tool can work backwards. Based on the total expenses and tax regime, it calculates the gross income required to at least break even. For example, if monthly expenses are €5,000 and under NHR the effective tax rate is ~20%, perhaps ~€6,250 gross is needed to net €5,000. This gives users a goal number to aim for or negotiate for salary. (MVP can implement this in a basic way using an assumed flat tax or an average tax rate for the user’s income bracket.)
	•	“Felt” Cost of Schooling (Insight): If applicable, the dashboard can display an insight like: “Education is adding €X per month to your budget, which is equivalent to needing €Y additional gross income (considering tax) to cover it.” This contextualizes the cost of private schooling, for instance, in terms of earnings. Essentially, this highlights the net impact of schooling costs after tax – if school fees might be paid from post-tax income, they “cost” more in pre-tax terms. (This is an explanatory metric to help with the decision on school type.)
	•	Home Country vs. New Country Comparison: If the user opted to input or use a reference for their origin country, the dashboard can provide a simple comparison, such as “Your estimated monthly expenses in Portugal (€5,000) are about 10% lower than your current expenses in the UK (£4,800 equivalent)” or similar. This requires either user input for the origin scenario or using cost indexes. In MVP, this might be a very basic toggle showing one scenario at a time (the user can manually input a separate scenario for their home country to compare). A more automated comparison is a future stretch goal.
	•	Visualization: The summary should be presented in an easy-to-read format, possibly with charts or graphs (e.g. a pie chart of expenses by category, or a bar showing income vs expenses). MVP will include a simple visualization (like a bar chart of monthly income vs expenses) if time permits, or at least well-formatted text summary.

All calculations in the dashboard update in real-time or upon clicking a “Calculate” button after inputs are entered, allowing the user to iterate and tweak their assumptions (sliders and toggles in previous modules) to see updated results.

⸻

Note: The MVP deliberately focuses on the core inputs and outputs needed for budgeting. It does not yet include more advanced features like saving multiple scenarios at once, in-depth tax optimization, or automated advice. These are slated for future phases (see Future Enhancements below), but the MVP provides a solid foundation that addresses the primary use cases for an expat family’s financial planning.

Non-Goals / Out of Scope (MVP)

To maintain focus, the following items are out of scope for the initial release:
	•	Real-Time Financial Account Integration: The tool will not link to bank accounts or credit cards to automatically fetch transactions. (Users will manually input their expected expenses and incomes, at least for MVP.)
	•	Investment Portfolio Tracking or Advice: No live tracking of investments, stock portfolios, or providing investment advice. The tool is for budgeting and planning, not investing or wealth management.
	•	Detailed Tax Filing or Legal Compliance Tools: We will not provide official tax filing, complex tax audit, or visa/immigration management features. (Tax calculations in the tool are approximate for budgeting purposes only, not to be used as actual tax advice or filing.)
	•	One-Size-Fits-All for All Countries (MVP): While the architecture is prepared for multiple countries, the initial version will be tailored to the UK→Portugal scenario. Other countries’ specific costs or tax rules may not be pre-loaded until future expansions. (However, users could still manually input data for other countries if they wish, just without built-in presets.)
	•	Extensive Financial Modeling Beyond Budgeting: This is not a full financial planner for things like detailed retirement income projections, investment growth modeling, or debt amortization schedules beyond the basic mortgage calculator. Those advanced computations might be introduced later but are not in the first release.

By clarifying out-of-scope items, we ensure the MVP remains achievable and focused on delivering value in its core domain of relocation budgeting.

User Flow (High-Level)

Below is the high-level flow illustrating how a typical user (e.g., our relocating family persona) would interact with the tool in the MVP:
	1.	Profile Setup: The user begins by entering profile details: selects the destination country (Portugal), specifies their family size and ages, and indicates their status (using NHR regime or not). They confirm or set the currency (EUR) and maybe input a reference scenario for the UK if they plan to compare.
	2.	Enter Income Details: The user inputs their financial inflows. They add both partners’ salaries (e.g., Partner 1: £50k/year gross from a UK job, Partner 2: €40k/year gross from a local job) and any other income (rental income from a property back home, expected bonuses, etc.). The tool calculates monthly net income for each, given the tax settings.
	3.	Enter Expense Details: The user proceeds through the expense modules:
	•	In Housing, they toggle between rent and buy to see which to plan for, and decide to input (for example) renting a 3-bedroom apartment in Lisbon for €1,800/month.
	•	In Transport, they choose to own one car (with €300/month costs) and add €50 for public transport for commuting.
	•	They fill in Utilities & Essentials with their estimates: €150 for utilities, €50 for internet/phone, €800 for groceries, etc., plus add €200 for dining out and €100 for miscellaneous.
	•	In Education, since they have school-age kids, they try the private school option: input €10,000/year for international school tuition for two kids (the tool shows ~€833/month). For the youngest child (age 4), they add a daycare cost of €400/month.
	4.	Review Summary Dashboard: After entering all data, the user views the summary dashboard. They see total monthly expenses around, say, €5,000 and total net income perhaps €5,500, indicating a small surplus. The breakdown shows housing is the largest chunk. The dashboard also highlights that private schooling is costing €1,233/month (tuition plus daycare), and without those, expenses would drop to €3,800. They notice the “required gross income” to cover €5,000 net is ~€6,250, which is slightly above their combined gross – indicating they might need to adjust. The user can toggle off the private school to see the impact: switching to public school updates the education cost to near €0 (for tuition), and now their surplus looks much healthier. They can also adjust the exchange rate assumption (if one is present) to simulate if GBP weakens or strengthens against EUR.
	5.	Refine and Iterate: The user goes back and forth making adjustments – perhaps they try a cheaper rent of €1,600 or consider buying a house with a mortgage to compare. They see how each change reflects in the summary. They might run a quick emergency scenario by zeroing out one salary for a month to see if the other income can cover the essentials (the summary might show a deficit for that month, reinforcing the need for an emergency fund).
	6.	Save Scenario (if available) or Note Results: In MVP, the user can at least screenshot or manually note their results (full save functionality might be limited or only via browser storage). They use these findings to plan their move (e.g., deciding on public school to save money, or negotiating a higher salary knowing the required gross target).

(In a future iteration, the user could save this scenario and create a new one to compare side-by-side, but MVP assumes a single scenario at a time with manual adjustments.)

This flow demonstrates how the tool guides the user from input to insight, keeping the experience interactive and informative.

Data Model and Architecture (High-Level)

To support the above features, the product will use a modular data model representing the user’s profile, financial inputs, and scenarios. At a high level, the key data entities include:
	•	User Profile: Contains basic info like location (destination country), origin (if used for comparison), familySize (adults, children), details of children’s ages, and selected taxRegime (e.g. NHR). It may also hold a baseCurrency setting (e.g. EUR) for calculations.
	•	Income: Holds a list of income records – e.g. fields for partner1Salary, partner2Salary (with sub-fields like amount, frequency, currency, tax status), a list of passiveIncomeStreams[] (each with type, amount, frequency), and oneOffInflows[] (each with amount, description, timing). This structure is flexible to accommodate various income types.
	•	Expenses: Structured by category. For instance, a housing object (with fields like rent or mortgage, propertyTax, etc.), a transport object (with carOwnership boolean and associated costs, publicTransport cost, etc.), an essentials object (with utilities, groceries, etc.), and an education object (with flags for public/private and costs). Each of these contains the user-provided values.
	•	Budget Summary/Results: Computed values (not all stored, mostly derived) such as totalMonthlyExpenses, totalAnnualExpenses, totalIncomeNet, disposableIncome, requiredGrossIncome, etc. These can be encapsulated in a summary structure after calculation.
	•	Scenario (for future use): In later versions, we may introduce a scenario entity that captures a snapshot of Profile+Income+Expenses to allow saving multiple scenarios (e.g. “Scenario A: renting & public school” vs “Scenario B: buying & private school”). For MVP, only one scenario is active at a time, so this is conceptually present but not fully utilized in the UI.

From an architecture standpoint, the tool is envisioned as a web application built with a modern, modular stack:
	•	Frontend: A responsive web front-end (likely using React for UI components and Tailwind CSS for styling) will handle the interactive forms, toggles, and real-time calculations display. The UI will be componentized by module (Profile form, Income form, Housing form, etc., and Summary dashboard as separate components). This modularity makes it easier to add or modify modules without affecting others (for example, adding a new “Healthcare” module in the future).
	•	Backend: Initially, the app could run largely in the browser (calculations done in JavaScript) given the computational load is light (budget calculations). However, a backend is planned for user account management and persistence. For MVP, we might use a simple Node.js/Express backend or serverless functions (on Vercel or Firebase Cloud Functions) mainly to store data if needed and possibly perform more complex calculations (like tax computations via a secure module).
	•	Data Storage: In MVP, data can be stored locally in the browser (so a user doesn’t lose inputs if they refresh). For Phase 2, a cloud database (e.g. Firebase Firestore or a PostgreSQL database) will be introduced to allow users to create accounts and save their scenarios securely to the cloud (enabling access from multiple devices and true SaaS functionality). Each user’s data will be isolated (ensuring privacy and security via proper authentication and rules so one user cannot access another’s data).
	•	Tax and Currency Logic: We will abstract tax calculations and currency conversions into their own service or module. For example, a Tax Calculator module (could be a Python or TypeScript library) will take gross income and tax regime as input and return net income. This could be extended to new countries by plugging in different tax rules without altering the core app. Similarly, an FX Service can fetch or input exchange rates. In MVP, the FX rate may be a manual input, but the architecture can later integrate an API (for live rates) or allow dynamic simulation via a slider.
	•	AI Assistant Integration (Future): While not in MVP, the design anticipates a possible AI budgeting assistant. The architecture will allow sending a summary of the user’s scenario to an AI service (like an OpenAI GPT model) to get advice or answer questions. This will likely be an isolated module or microservice that can be invoked on demand, ensuring that core calculations are separate from AI.
	•	Modular Extensibility: Each feature module (housing, transport, etc.) is designed to be self-contained, which means we can add new modules (for example, a **“Healthcare & Insurance” module) or swap in country-specific sub-modules (like a different tax calculator for Spain) with minimal impact on the rest of the system. This modular approach, combined with a clear data model, ensures the product can be extended into a platform serving many scenarios (different user types, different countries) and maintained or upgraded easily.
	•	Security & Data Separation: As we evolve into a SaaS, user authentication will be added (likely using a service like Firebase Auth or Auth0 for ease). Each authenticated user will have their own data space. Sensitive personal data will be kept minimal (mostly financial plans, no banking info in MVP) but will be protected in transit (HTTPS) and at rest in the database. We will include privacy safeguards and make sure that any future integrations (such as connecting to bank APIs or external data) are done securely and in compliance with data protection laws.

By planning the data model and tech stack in this way, we ensure that the MVP is solid but not brittle – it will serve as the foundation upon which more advanced features and more users (and countries) can be supported without a complete rewrite.

Future Enhancements and Roadmap

While the MVP focuses on core budgeting functionality, we have a clear roadmap of enhancements to transform the tool into a comprehensive relocation financial planning platform. Below are the key future features and improvements envisioned:
	•	Emergency Fund & Cash Flow Planning: Introduce an Emergency Fund module where users can specify a target reserve (e.g. 3, 6, or 12 months of expenses saved). The tool would then show how many months of their current expenses their savings could cover (“runway”), and allow them to simulate periods of no income. It could also handle irregular expense planning (for example, if a big bill comes every 6 months, to ensure they allocate funds for it). This helps users plan for income gaps or unexpected costs, aligning with expert recommendations for expats to keep 3-6 months of expenses in cash ￼.
	•	Advanced Currency and Dual-Currency Support: Build out the FX Sensitivity feature fully. Users will be able to designate different currencies for each income or expense item and see the impact of exchange rates. A slider or input for exchange rate will dynamically update the summary, so users can easily test best-case and worst-case currency scenarios. We may also integrate real-time exchange rate data and even allow alerts if the rate moves significantly (for those with ongoing currency exposure).
	•	Healthcare & Insurance Module: Add a dedicated module for healthcare planning. Users can input health insurance premiums (or choose public vs. private healthcare usage), expected out-of-pocket medical costs, and even things like dental or vision expenses. For retirees or those with specific health needs, this module will ensure these costs are not overlooked. The module might also consider different plans for each family member (for instance, the state might cover children’s healthcare but adults need private insurance, etc.). This addresses the “healthcare assumptions” aspect by making such costs explicit and adjustable.
	•	Savings & Retirement Planning: Expand the tool to handle savings goals and retirement contributions. Users could input planned savings per month (e.g. to a savings account or investment) as a “expense” (pay-yourself-first model), and the tool would show how adding that affects their disposable income. Additionally, for long-term users, we could incorporate a simple projection of how their net worth grows given their budget (e.g. if they save €X/month, what does that look like over 5 years). This would be a step toward retirement planning. Also, include pension contributions if relevant (for example, if they continue contributing to a UK pension vs a Portuguese one, how that is budgeted).
	•	Debt Management: If the users carry debts (like a student loan, or perhaps a remaining mortgage back home, or a car loan), provide a feature to input those debts and model repayment. This module would allow input of debt balance, interest rate, minimum payment, and any additional payment the user plans. The tool could then calculate how long until debt-free or what amount of the monthly budget goes to debt servicing. While not critical for every user, this helps those who are relocating but still need to manage debts incurred elsewhere.
	•	Multi-Scenario Saving & Comparison: Evolve the platform to support Scenario Planning more robustly. Users will be able to save multiple scenarios (each being a set of all inputs) and then compare them side by side. For example, “Scenario 1: Rent & Public School” vs “Scenario 2: Buy & Private School” could be saved, and the tool would show a comparison of key outputs (maybe in a comparison table or chart). This makes decision-making between two complex alternatives much easier, rather than the manual toggling of MVP. Scenarios could also be used for comparing different countries (e.g. an option to clone your Portugal scenario to Spain or Italy with adjusted costs, if considering multiple destinations).
	•	AI Budgeting Assistant: Integrate an AI-driven assistant to provide personalized insights and answer user questions. This could be a chat interface or a tip generation that, for instance, analyzes the user’s inputs and suggests ways to optimize (e.g., “Your housing cost is a high portion of your income; consider if downsizing or finding housing slightly further from city center could save money”). It could also answer questions like “What if I increase my emergency fund?” or “How does the NHR regime benefit me exactly in this scenario?” by leveraging a GPT-based model. This feature would be introduced carefully as an optional help tool, and clearly indicate that it’s for guidance only, not financial advice. Structurally, our system will be ready to send the relevant data (in a prompt) to an AI service and display the result.
	•	Alerts & Proactive Nudges: Implement an alert system to keep users on track. For example, if their plan shows a very slim margin, the tool might display a gentle warning: “Your disposable income is under 5% of your total income – consider increasing your income or reducing costs to have a safety buffer.” Or if the user sets an emergency fund target, it could nudge: “You have a 3-month emergency fund; increasing this to 6 months could provide more security.” Additionally, if exchange rates change (in a future live-connected version), it might alert: “The EUR/GBP rate moved by 5% this month, your budget figures have been updated accordingly.” These nudges will help users remain informed and possibly log back in to adjust their plan if needed.
	•	International/Country Expansion: Gradually extend the tool’s presets and logic to other popular expat destinations. The architecture will allow plugging in new country profiles (tax rules, typical cost-of-living data, etc.). Future roadmaps include countries like Spain, France, Italy or beyond Europe (for example, supporting US -> Europe moves or vice versa). Each new country will involve adding its tax calculation module and maybe a default dataset of typical expenses to help users. Ultimately, the goal is to support planning from any country to any country, by letting the user pick origin and destination and loading the appropriate financial assumptions for both. This could position the product as a go-to platform for global mobility financial planning.
	•	SaaS Platform Features: As the user base grows, convert the tool into a full SaaS product. This means implementing user accounts with login, the ability to save data to the cloud and access it from anywhere. We would also consider a subscription model for premium features (for example, basic budgeting features free, advanced modules like AI assistant or multi-scenario comparison as part of a premium plan). Additionally, multi-user collaboration could be explored (e.g., both partners can log in and jointly edit their family budget scenario). Admin and support tooling will be added to manage the service. We will maintain data separation and security as top priorities in this SaaS evolution, ensuring each customer’s data is private.

The roadmap above will be implemented in phases, prioritizing the most valuable additions first. We expect Phase 2 (post-MVP) to focus on data persistence (cloud saving) and one or two high-impact modules like Emergency Fund and Scenario Saving, based on user feedback. Later phases will integrate AI and expand country support. Throughout, we’ll remain responsive to real user input to refine the direction.

Success Metrics

To gauge the success of the Living Abroad Budgeting Tool, we will track the following key metrics:
	•	User Adoption & Active Use: Number of users who complete a budgeting session (enter all required inputs and view the summary). Specifically, track how many active users use the tool per month and how many scenarios (calculations) are run. A growing count of active users indicates the tool is addressing a real need.
	•	Completion Rate: Percentage of users who start inputting data and actually reach the Summary Dashboard. A high drop-off before completion might indicate usability issues in the forms or that the process is too cumbersome. Our goal is to have a strong completion rate, showing that users find the process straightforward.
	•	Scenario Comparisons Saved (future): Once multi-scenario features are live, track how many users create multiple scenarios, indicating deeper engagement with planning.
	•	User Feedback & Satisfaction: Collect user feedback via surveys or feedback forms. Metrics like Net Promoter Score (NPS) or direct user quotes about accuracy and usefulness will be monitored. We aim for feedback indicating that users felt more confident in their move after using the tool. For example, a target could be “80% of surveyed users agree that ‘this tool helped me understand the financial implications of my move’”.
	•	Time Spent / Engagement: The amount of time users spend on the platform per session. If they spend sufficient time inputting and tweaking (without being too long to indicate frustration), it suggests they are exploring scenarios thoroughly. For instance, an average session time of 5-10 minutes might be ideal for an engaged planning session.
	•	Referral and Organic Growth: Track if users are sharing or recommending the tool (some could be measured by referral codes or just uptick in direct traffic). Positive word-of-mouth or community recommendations would validate that the product has delivered value.
	•	Conversion to Account (if SaaS): In later phases, if we offer account creation or premium features, measure what percentage of users sign up for an account after trying the tool, and if applicable, how many convert to paid subscriptions. This will inform the viability of the SaaS model.
	•	Diverse Usage of Features: Monitor usage analytics to see which toggles or modules are frequently used. For example, if a significant portion of users are toggling “rent vs buy” or using the “FX slider”, it shows those features are valuable. Alternatively, if some features are rarely used, we may investigate why (perhaps certain assumptions don’t apply or need improvement).

Success for the MVP will primarily be measured by qualitative feedback (are the initial target users – e.g. our relocating family – able to get the answers they need?) and initial usage numbers. As we iterate, these metrics will guide us in refining the user experience and prioritizing new features.

Risks and Mitigations

While building this product, we have identified several potential risks and our planned mitigations to address them:
	•	Complexity of Tax and Financial Calculations: Accurately capturing tax rules (especially special regimes like NHR) and other financial intricacies can make the tool complex and potentially confusing if results don’t match user expectations. Mitigation: Start with simplified but transparent assumptions for taxes in MVP (e.g. a flat rate or basic bracket). Clearly display or document these assumptions (e.g. “Assuming 20% flat tax on income under NHR” or “not accounting for social security deductions”) so users understand the scope. We will modularize the tax logic so it can be improved or made more granular over time without overhauling the whole system ￼. If users need higher accuracy, we could allow them to input their own estimated effective tax rate as a stop-gap. Gradual refinement (and possibly consultation with expat tax advisors for future versions) will ensure we balance accuracy and simplicity.
	•	Accuracy of User Inputs and Estimates: The tool’s output is only as good as the inputs. If users are unsure of costs (like utility bills or school fees) and input poor estimates, the result might mislead them. Similarly, cost-of-living can vary widely by region (e.g. Lisbon vs rural Portugal). Mitigation: Provide guidance and sensible default values where possible. For example, show tooltips or ranges (perhaps sourced from data like Numbeo or expat forums) for typical costs in Portugal to help users input realistic numbers. We might include default profiles (e.g. “Average Lisbon apartment rent for family: €X”) as hints. Also, emphasize that they should err on the side of caution (maybe add a small contingency) to cover unknowns. We will include information pop-ups (ℹ️ tooltips) explaining each input briefly and advising on how to estimate it. By educating users as they input data, we improve the chances that their scenario is realistic ￼.
	•	User Interface Overwhelm: With many inputs and modules, there is a risk the user feels overwhelmed or finds the process too long. This could hurt completion rates. Mitigation: Use a clean, step-by-step UI with progressive disclosure. For example, initially show just the Profile and Income sections; once those are filled, reveal the next sections. Group related inputs and use visuals (icons for categories, progress indicators) to keep it friendly. Possibly implement an initial “quick estimate” mode where a minimal number of questions yield a rough budget, and then the user can refine by adding more details. Also ensure performance is snappy – calculations should update quickly so the user isn’t waiting.
	•	Scope Creep and Feature Creep: There are countless potential features (from detailed tax optimization to integrating real estate listings). Including too much can delay the product or dilute the main value proposition. Mitigation: We will strictly adhere to the defined MVP scope for the first release and use the roadmap to park additional ideas ￼. Regularly revisiting the core vision (“does this serve a relocating family’s budget planning?”) will help evaluate if a new idea is in scope or should be a later consideration. We will also gather user feedback to focus on what they truly need next, rather than what we assume.
	•	Data Security and Privacy: As we deal with personal financial information, users might be concerned about privacy. If we introduce login and cloud saving, protecting that data is crucial. Mitigation: Even in MVP (which might not have login), we treat any stored data as sensitive. We’ll use secure protocols (HTTPS) and if using local storage, store minimally and clearly (so a user can clear it if they want). Moving to cloud, we’ll implement authentication and database rules to ensure users only access their data. No personal identifiable info beyond maybe an email (for account) will be stored. We will also have a clear privacy policy and perhaps an option for users to use the tool in a local-only mode without creating an account if they are more comfortable that way.
	•	Exchange Rate Volatility and Updates: If the tool provides currency conversion, using outdated rates could mislead users, yet constant updates could confuse them as their numbers change. Mitigation: For MVP, we may ask the user to input an assumed exchange rate, putting them in control. In future, if we auto-update rates, we’ll inform the user when a refresh happens or allow them to lock a rate for planning purposes. We might also include a conservative buffer (like suggest planning with a slightly adverse rate) to be safe. Communication is key: a disclaimer that “all conversions use rate X, you can adjust this” gives users clarity.
	•	Integration of AI (Future Risk): Relying on an AI assistant might sometimes produce incorrect or misleading advice, which could be problematic in a financial context. Mitigation: Clearly label AI outputs as unofficial suggestions. We’d thoroughly test prompt engineering to make the AI as accurate as possible, but also encourage users to treat it as a second opinion. Additionally, any critical calculation will not be left to the AI (the AI won’t compute budget numbers, it will only interpret or suggest). Users will always base decisions on the deterministic calculations of the tool, with the AI just providing narrative guidance.

By identifying these risks early, we can design the product and our development process to minimize issues. We will continue to monitor for new risks (for example, changes in the NHR/ITS tax law or other external changes) and adapt accordingly, ensuring the tool remains reliable and trustworthy.

Development Plan and Phases

To deliver value quickly and then iterate, we will follow a phased development approach:
	•	Phase 1 – MVP Delivery: Focus on implementing the Core Features (1–7) outlined in the MVP scope. This includes the full input flow (Profile, Income, Housing, Transport, Essentials, Education) and the Summary Dashboard. We will build a functional front-end with React components for each section and simple state management to carry data to the summary. Basic calculation logic (in JavaScript/TypeScript) will be written for summing expenses, converting incomes to net, etc. Data can be persisted in the browser (so if the user accidentally refreshes, their inputs aren’t lost). We will conduct testing with sample scenarios (especially the primary use case of a UK-to-Portugal family) to fine-tune assumptions. Success criteria for Phase 1: A user can go from start to finish and get a reasonable budget outcome, and the interface is user-friendly on desktop (and mobile, if possible). We’ll gather initial feedback from a small group (e.g. expat forum volunteers or friends who moved abroad).
	•	Phase 2 – Enhancements & Cloud Enablement: After MVP launch, the next step is to introduce data persistence and selected high-impact add-ons:
	•	User Accounts & Data Storage: Implement a back-end with a database (e.g. integrate Firebase). Users will be able to create an account (with email/password or social login) and save their scenario to the cloud. This allows returning to edit or using the tool across devices.
	•	Emergency Fund Module: Develop the emergency planning features to let users input a savings amount and see coverage, etc.
	•	Scenario Management: Start allowing users to save multiple named scenarios under their account. The UI will include options to “Save Scenario As…” and a way to load a scenario. Full side-by-side comparison UI might be a Phase 3 item, but at least they can have separate scenarios saved.
	•	FX Sensitivity Controls: Add at least a basic currency toggle or exchange rate slider. Possibly also allow marking each income as GBP or EUR with a conversion.
	•	Refine UI/UX: Incorporate feedback from MVP users to fix any usability issues. Possibly add more visuals (like charts) to the dashboard if that was deferred.
	•	Comparison to Origin: If there’s demand, provide a structured way to input origin-country expenses and show a simple comparison in the summary.
Phase 2 will make the product more robust and engaging, moving it closer to a full SaaS offering. We will monitor usage of new features (do people use scenario saves? etc.) to guide further development.
	•	Phase 3 and Beyond: Focus on additional modules and intelligence:
	•	Implement the Healthcare, Savings, Debt modules as separate components that advanced users can toggle on if relevant.
	•	Integrate the AI assistant once we have enough data and confidence in the system’s stability. Likely start with a simple Q&A chatbot for budgeting tips.
	•	Expand the content to new countries: e.g., add support for another popular route (maybe USA to Portugal, or UK to Spain) by including those tax rules and cost hints. This will broaden the user base.
	•	Introduce premium tiers if the strategy is to monetize, and ensure the value of premium features is clear (e.g. AI assistant and multi-country support might be premium).
	•	Continuously refine accuracy – perhaps partner with financial consultants or incorporate more data for precise calculations (like updated tax rates annually, etc.).

Each phase will be reassessed based on user feedback and market demand. The ultimate goal after these phases is that the Living Abroad Budgeting Tool becomes a comprehensive SaaS platform for expat financial planning, with a reputation for making the complex process of cross-border budgeting simple and approachable.

⸻

With this PRD, we have a clear blueprint of the product vision, features, and future roadmap for the Living Abroad Budgeting Tool. By executing phase by phase and keeping user needs at the core, we aim to deliver a product that can meaningfully ease the transition for families and individuals moving to new countries, starting with our UK-to-Portugal scenario and expanding beyond. The combination of practical budgeting tools and forward-looking enhancements (like AI and multi-country support) sets the stage for a unique offering in the personal finance space for expatriates and global nomads. Let’s build it!